services:
    db:
        restart: unless-stopped
        image: postgres:15-alpine
        volumes:
            - ./data/db:/var/lib/postgresql/data
        environment:
            - POSTGRES_HOST_AUTH_METHOD=trust
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersecretpassword

    web:
        image: coreproject
        restart: unless-stopped
        build: ./backend
        entrypoint: /code/server_entrypoint.sh
        volumes:
            - ./media:/code/django_core/media
            - ./backend:/code/
        ports:
            - "9000:8000"
        expose:
            - 9000
        environment:
            - 'DEBUG=False'
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersecretpassword
            - "POSTGRES_HOST=db"
            - POSTGRES_PORT=5432
            - DJANGO_ALLOWED_HOSTS=backend.${SITE_ADDRESS}
        depends_on:
            - db

    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine

    worker:
        image: coreproject
        restart: unless-stopped
        build: ./backend
        volumes:
            - ./media:/code/django_core/media
        entrypoint: /code/worker_entrypoint.sh
        environment:
            - 'DEBUG=False'
            - "REDIS_URL=redis://redis:6379/0"
            - "CELERY_BROKER_URL=redis://redis:6379/0"
            - "CELERY_RESULT_BACKEND=redis://redis:6379/0"
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersecretpassword
            - "POSTGRES_HOST=db"
            - POSTGRES_PORT=5432
            - DJANGO_ALLOWED_HOSTS=backend.${SITE_ADDRESS}
        depends_on:
            - web
            - redis

    caddy:
        image: caddy:alpine
        container_name: caddy
        network_mode: "host"
        restart: always
        ports:
            - 80:80 # Needed for the ACME HTTP-01 challenge.
            - 443:443
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile:ro
            - ./caddy-config:/config
            - ./caddy-data:/data
        environment:
            - SITE_ADDRESS=${SITE_ADDRESS}
            - LOG_FILE=/data/access.log
volumes:
    pgdata:
